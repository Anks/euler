#!/usr/bin/env python
# -*- coding: utf-8 -*-

cache = {} # keep caching lengths for the series 

def length_of_series(input_number):
    """
    Returns the length of the sequence generated by the
    problem formula with input_number as the start point
    """
    global cache
    length = 1
    number = input_number
    
    while number != 1:
        # If we reach an already known value, no need to compute length further
        if cache.has_key(number):
            length = length + cache[number]
            break

        # Find the next term of the series
        if number % 2 == 0:
            number = number / 2
        else:
            number = 3 * number + 1
        
        length = length + 1

    # Store the length in cache
    cache[input_number] = length
    return length
    
if __name__ == '__main__':
    print max((length_of_series(i), i) for i in range(1, 1000000))[1]
